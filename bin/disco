#!/usr/bin/env ruby
# encoding: utf-8

$: << File.expand_path('../../lib', __FILE__)

require 'aws'
require 'disco'


abort('Please specify seeds') unless ARGV.first

instance_filter = Disco::ProcFilter.new { |instance| true }

ec2 = Disco::Ec2.new(AWS, ec2_endpoint: 'ec2.eu-west-1.amazonaws.com')
instance_cache = Disco::InstanceCache.new('/tmp/instances', ec2, instance_filter)
instance_cache.on(:instance_loaded) do |event|
  $stderr.puts("Loaded #{event[:instance].name}")
end

instances = instance_cache.instances
services = Disco::ServicePortMapper.new(custom: {'apani1' => 9160})
discovery_commands = [Disco::SsCommand.new(services)]
connection_explorer = Disco::ConnectionExplorer.new(discovery_commands, instances, username: 'burt', sampling_duration: 10.0)
topology_explorer = Disco::TopologyExplorer.new(connection_explorer, instances)

topology_explorer.on(:visit_instance) do |event|
  $stderr.puts("Visiting #{event[:instance].name}")
end

topology_explorer.on(:instance_visited) do |event|
  $stderr.puts("#{event[:instance].name} had #{event[:connections].size} connections")
end

topology_explorer.on(:connection_error) do |event|
  $stderr.puts("Warning: could not visit #{event[:instance].name}: #{event[:error].message}")
end

connections = topology_explorer.discover_topology(ARGV)

puts(JSON.pretty_generate(connections.map(&:to_h)))